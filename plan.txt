- Попробовать заменить коллизию с краями карты назначением текущиъ координат максимально и минимально доступными
- сделать врежские корабли летающими в разные стороны и стреляющие в игрока
- перенести настройки объектов в файлы и загружать при создании
- исправить баг с местом вылетания пули
- Уменьшать здоровье уничтожаемых объектов в зависимости от их скорости и массы. Надо ввести сопротивляемость корпуса, это
    будет как коеффициент уменьшения здоровья.
- инвертировать поворот при заднем ходе
- привести комментарии в порядок
- скорость не должна быть отрицательной, надо переделать механику перемещения
- сделать астероиды крутящимися
- метод copy() для списков и групп объектов надо заменить на цикл с учётом удаляемого элемента

- Анимация поворота корабля
- расширить карту
- Сделать туман войны и открытые но ненаблюдаемые зоны. Попробовать через рей кастинг
- Перегрев и поломка двигателя
- Миникарта
- Сдвигаемая карта вслед за движением игрока
- Передачи скорости (для уменьшения максимальной скорости при движении в замусоренном пространстве)
- Прокачиваемость корабля
- разные виды вооружений
- Сетевой режим
- Другая архитектура приложения
- Линковать с плюсами
- Запускаемость в браузере
- Сначала прокачиваемость можно сделать в виде смены картинки корабля. Потом можно отдельно 
    пририсовывать ему элементы и убирать их по мере разрушаемости.


Расчёт урона.
    предположение: чтобы унифицировать нанесение урона вне зависимости от типа столкнувшихся объектов можно высчитывать урон
    основываясь на базовом уроне сущности, текующей скорости объектов и направлении скорости

    как:
    1. при идентификации столкновения не давать сущностям с rigid_body двигаться друг в друга
    2. при наличии у сущностей компонентов destructable, damage, health наносить урон

    2: урон высчитывать как произведение базового урона на модуль проекции вектора скорости на вектор направления
    от центра rigid_body одной сущности на центр rigid_body другой сущности